#!/bin/bash
#
# Copyright (c) 2019, MinIO, Inc.
#
# This code is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License, version 3,
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
<%
  require "shellwords"

  def esc(x)
      Shellwords.shellescape(x)
  end
%>

RUN_DIR=/var/vcap/sys/run/minio-nas
LOG_DIR=/var/vcap/sys/log/minio-nas
DATA_DIR=<%= esc(p("data_dir")) %>
CONFIG_DIR=<%= esc(p("config_dir")) %>
PIDFILE=${RUN_DIR}/pid
BINPATH=/var/vcap/packages/minio

if [ "$CONFIG_DIR" = "" ]; then
    CONFIG_DIR="$HOME/.minio"
fi

mkdir -p ${RUN_DIR} ${LOG_DIR}
chown -R vcap:vcap $RUN_DIR $LOG_DIR

export MINIO_ACCESS_KEY=<%= esc(p("credential.accesskey")) %>
export MINIO_SECRET_KEY=<%= esc(p("credential.secretkey")) %>
export MINIO_PCF_TILE_VERSION=<%= esc(p("pcf_tile_version")) %>

case $1 in

  start)

    echo "Checking to see if data_dir is mounted." >> ${LOG_DIR}/minio-server.stdout.log
    nas_check_attempts=0
    while [ "$(stat --format='%d%D' /)" = "$(stat --format='%d%D' $DATA_DIR)" ]; do
      sleep 1
      nas_check_attempts=$((nas_check_attempts+1))
      echo "Failed to find NAS mount $nas_check_attempts times." >> ${LOG_DIR}/minio-server.stderr.log
      if [ $nas_check_attempts = "20" ]; then
        echo "Timed out waiting for NAS mount to become available." >> ${LOG_DIR}/minio-server.stderr.log
        exit 1
      fi
    done
    echo "NAS share mounted! Starting Minio." >> ${LOG_DIR}/minio-server.stdout.log

    echo $$ > $PIDFILE
    exec ${BINPATH}/minio gateway -C $CONFIG_DIR --address :<%= esc(p("port")) %> nas $DATA_DIR \
         >> ${LOG_DIR}/minio-server.stdout.log \
         2>> ${LOG_DIR}/minio-server.stderr.log
    ;;

  stop)
    kill -9 `cat $PIDFILE`
    rm -f $PIDFILE

    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
